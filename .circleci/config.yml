version: 2.1
orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  install-dependencies:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: app dependencies
          working_directory: ./app
          command: npm install
      - save_cache:
          paths: [app/node_modules]
          key: build

  aws-cli-cred-setup:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY
          aws-secret-access-key: AWS_ACCESS_SECRET
          aws-region: AWS_REGION_NAME

  linting:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [ build ]

      - run:
          name: Lint app
          working_directory: ./app
          command: |
            yarn run lint

      - run:
          name: Install hadolint
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint


      - run:
          name: Lint Dockerfile
          command: |
            hadolint Dockerfile
  scan-app:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [build]
      - run:
          name: scan app
          working_directory: ./app
          command: |
            npm audit fix --force

  build-docker:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Push Docker image
          command: |
            DOCKERPATH="arnoldrx/capstone-project"
            docker build --tag=capstone-project .
            docker login -u arnoldrx -p "$DOCKER_PASSWORD"
            docker image tag capstone-project $DOCKERPATH:latest
            docker image push $DOCKERPATH
            docker image tag capstone-project $DOCKERPATH:${CIRCLE_WORKFLOW_ID:0:7}
            docker image push $DOCKERPATH:${CIRCLE_WORKFLOW_ID:0:7}

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -m 0755 kubectl /bin/kubectl\

      - run:
          name: Installing aws-iam-authenticator
          command: |
            curl -o aws-iam-authenticator curl -o aws-iam-authenticator https://amazon-eks.s3-us-east-1.amazonaws.com/1.13.7/2019-06-11/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            sudo mv ./aws-iam-authenticator /usr/local/bin/aws-iam-authenticator

      - run:
          name: Update Deployment
          command: |
            PROJECT=capstone
            IMAGE="arnoldrx/capstone-project"
            aws eks --region us-east-1 update-kubeconfig --name Capstone-Cluster
            kubectl apply -f kubernetes/rollback.yml
            kubectl apply -f kubernetes/deployService.yml
            kubectl set image deployments/$PROJECT $PROJECT=$IMAGE:${CIRCLE_WORKFLOW_ID:0:7}
            kubectl get nodes
            kubectl get pods
            
            

workflows:
  default:
    jobs:
      - install-dependencies
      - aws-cli-cred-setup:
          context: aws
      - linting:
          requires: [ install-dependencies ]
      - scan-app:
          requires: [ linting ]
      - build-docker:
          requires: [ scan-app ]
          filters:
            branches:
              only: [ main ]
      - deploy:
          context: aws
          requires: [ build-docker, aws-cli-cred-setup ]
          filters:
            branches:
              only: [ main ]