version: 2.1
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0


jobs:
  install-dependencies:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          name: app dependencies
          working_directory: ./app
          command: npm install
      - save_cache:
          paths: [app/node_modules]
          key: build

  linting:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [ build ]

      - run:
          name: Lint app
          working_directory: ./app
          command: |
            yarn run lint

      - run:
          name: Install hadolint
          command: |
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64
            sudo chmod +x /bin/hadolint


      - run:
          name: Lint Dockerfile
          command: |
            hadolint Dockerfile
  scan-app:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [build]
      - run:
          name: scan app
          working_directory: ./app
          command: |
            npm audit fix --force

  build-docker:
    working_directory: /app
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - deploy:
          name: Push Docker image
          command: |
            DOCKERPATH="arnoldrx/capstone-project"
            docker build --tag=capstone-project .
            docker login -u arnoldrx -p "$DOCKER_PASSWORD"
            docker image tag capstone-project $DOCKERPATH:latest
            docker image push $DOCKERPATH
            docker image tag capstone-project $DOCKERPATH:${CIRCLE_WORKFLOW_ID:0:7}
            docker image push $DOCKERPATH:${CIRCLE_WORKFLOW_ID:0:7}

  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: kubernetes/rollback.yml
          resource-name: deployment/blue
  create-service:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          resource-file-path: kubernetes/deployService.yml
          resource-name: service/bluegreenlb

  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''


workflows:
  default:
    jobs:
      - install-dependencies
      - linting:
          requires: [ install-dependencies ]
      - scan-app:
          requires: [ linting ]
      - build-docker:
          requires: [ scan-app ]
          filters:
            branches:
              only: [ main ]
      - create-small-cluster:
          cluster-name: capstone-cluster
          requires: [ build-docker ]
      - create-service:
          cluster-name: capstone-cluster
          requires: [ create-small-cluster ]
      - create-deployment:
          cluster-name: capstone-cluster
          requires: [ create-service ]
      - aws-eks/update-container-image:
          cluster-name: capstone-cluster
          container-image-updates: 'blue=arnoldrx/capstone-project:latest'
          record: true
          requires: [ create-deployment ]
          resource-name: deployment/blue